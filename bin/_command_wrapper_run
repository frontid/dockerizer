#!/bin/bash

current_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
bin_path="`dirname $0`"
root_dir="$( cd $bin_path && cd .. && pwd)"
relative_path=${PWD#$root_dir}
user_uid=1000
user_group=1000

if [[ "$OSTYPE" == "darwin"* ]]; then
    user_uid=501
    user_group=20
fi

# Load project specific variables.
set -o allexport
source "${bin_path}/../.env"
set +o allexport

# We assign the container name to a variable then shift it from the array of params.
container_name=$1
shift;

container=$PROJECT_NAME
container+="_$container_name"

# If the input comes from a pipe or file ("< something.txt") we cant use "t" 
#flag since it will fail with "the input device is not a TTY"
# -t 0 == stdin
if [ -t 0 ]; then
  	tty="-it"
else
	tty="-i"
fi

command="docker compose run --rm node /bin/bash -c 'cd /var/www/html$relative_path && $@'"

# Only show a screen message if the output is stdout.
if [ -t 1 ]; then
  echo -e "SENDING \e[32m$@\e[0m TO \"$container\" container."
fi

eval "$command"
